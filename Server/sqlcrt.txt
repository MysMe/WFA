CREATE TABLE USERS(ID INTEGER PRIMARY KEY, USERNAME TEXT NOT NULL UNIQUE, PASSWORD TEXT NOT NULL, PERMISSIONS INTEGER NOT NULL);

CREATE TABLE SUPPLIERS(ID INTEGER PRIMARY KEY, NAME TEXT NOT NULL UNIQUE, PHONE INTEGER, EMAIL TEXT);
CREATE TABLE VEHICLESHAREDDATA(ID INTEGER PRIMARY KEY, MAKE TEXT NOT NULL, MODEL TEXT NOT NULL, UNIQUE(MAKE, MODEL));

CREATE TABLE VEHICLES(ID INTEGER PRIMARY KEY, PLATE TEXT NOT NULL UNIQUE, BASE INTEGER NOT NULL, OWNER INTEGER NOT NULL, YEAR INTEGER NOT NULL, COLOUR TEXT NOT NULL, FOREIGN KEY(BASE) REFERENCES VEHICLESHAREDDATE(ID), FOREIGN KEY(OWNER) REFERENCES USERS(ID));
CREATE TABLE PARTGROUPS(ID INTEGER PRIMARY KEY, NAME TEXT NOT NULL UNIQUE);
CREATE TABLE PARTS(ID INTEGER PRIMARY KEY, NAME TEXT NOT NULL UNIQUE, QUANTITY INTEGER NOT NULL, SUPPLIER INTEGER NOT NULL, PRICE INTEGER NOT NULL, SIMILAR INTEGER, FOREIGN KEY(SUPPLIER) REFERENCES SUPPLIERS(ID), FOREIGN KEY(SIMILAR) REFERENCES PARTGROUPS(ID));

CREATE TABLE SERVICESHAREDDATA(ID INTEGER PRIMARY KEY, VEHICLE INTEGER NOT NULL, REQUESTED INTEGER NOT NULL, REQUEST TEXT NOT NULL, FOREIGN KEY (VEHICLE) REFERENCES VEHICLES(ID));
CREATE TABLE PARTSINSERVICE(ID INTEGER PRIMARY KEY, PART INTEGER NOT NULL, QUANTITY INTEGER NOT NULL, SERVICE INTEGER NOT NULL, FOREIGN KEY(PART) REFERENCES PARTS(ID), FOREIGN KEY(SERVICE) REFERENCES SERVICSHAREDDATA(ID));

CREATE TABLE UNAUTHORISEDSERVICES(ID INTEGER PRIMARY KEY, SERVICE INTEGER NOT NULL UNIQUE, FOREIGN KEY(SERVICE) REFERENCES SERVICESHAREDDATA(ID));

CREATE TABLE ACTIVESERVICEDATA(ID INTEGER PRIMARY KEY, SERVICE INTEGER NOT NULL, LABOUR REAL NOT NULL, NOTES TEXT NOT NULL, AUTHORISER INTEGER NOT NULL, QUOTE INTEGER NOT NULL, FOREIGN KEY(SERVICE) REFERENCES SERVICESHAREDDATA(ID), FOREIGN KEY(AUTHORISER) REFERENCES USERS(ID));
CREATE TABLE OPENSERVICES(ID INTEGER PRIMARY KEY, SERVICE INTEGER NOT NULL UNIQUE, FOREIGN KEY(SERVICE) REFERENCES ACTIVESERVICEDATA(ID));

CREATE TABLE CLOSEDSERVICES(ID INTEGER PRIMARY KEY, SERVICE INTEGER NOT NULL UNIQUE, COMPLETER INTEGER NOT NULL, COMPLETED INTEGER NOT NULL, PAID REAL NOT NULL, FOREIGN KEY(SERVICE) REFERENCES ACTIVESERVICEDATA(ID), FOREIGN KEY(COMPLETER) REFERENCES USERS(ID));